
#ifndef HEADER_CANVAS_
#define HEADER_CANVAS_

#include "basics.h"
#include "line.h"

/* Who said there is no genericity in C ?
 * Preprocessor abuse can make up for some of the lacking features of C. */

#define DECLARE_CANVAS(canvas_type_, function_prefix_, element_type_) \
	/* Canvas fat pointer type generated by the DECLARE_CANVAS macro. */ \
	struct canvas_type_ \
	{ \
		unsigned int resolution; /* The number of pixels on a side. */ \
		element_type_* grid; \
	}; \
	typedef struct canvas_type_ canvas_type_; \
	\
	/* Are the given coords in the canvas even after converting to coords_grid ? */ \
	int function_prefix_##_is_in_bounds(canvas_type_ canvas, coords_t coords); \
	\
	/* Get the color of the pixel at the given coords. */ \
	element_type_ function_prefix_##_get(canvas_type_ canvas, coords_t coords); \
	\
	/* Set the color of the pixel at the given coords to the given color. */ \
	void function_prefix_##_set(canvas_type_ canvas, coords_t coords, element_type_ color); \
	\
	_Static_assert(1, "")

DECLARE_CANVAS(canvas_gs_op_t, canvas_gs_op, gs_op_t);
DECLARE_CANVAS(canvas_float_t, canvas_float, float);

void canvas_gs_op_draw_line_coords(canvas_gs_op_t canvas, line_coords_t line,
	line_plot_algorithm_t line_algorithm);

void canvas_gs_op_draw_line_pixels(canvas_gs_op_t canvas, line_pixels_t line);

/* Outputs the given canvas as a bitmap image file at the given path.
 * The transparent areas let see a fully opaque background filled with
 * the given background grayscale. */
void canvas_gs_op_output_bmp(canvas_gs_op_t canvas, float background_gs,
	const char* output_file_path);

/* Outputs the given canvas as a bitmap image file at the given path. */
void canvas_float_output_bmp(canvas_float_t canvas, const char* output_file_path);

#endif /* HEADER_CANVAS_ */
